branches:
  only:
    - master
language: objective-c
os: osx
osx_image: xcode9.2
cache:
  - cocoapods
env:
  matrix:
    - TEST_TYPE=iOS
    - TEST_TYPE=macOS
    - TEST_TYPE=tvOS
    - TEST_TYPE=CocoaPods
    - TEST_TYPE=Carthage
before_install:
- |
  if [ "$TEST_TYPE" = iOS ] || [ "$TEST_TYPE" = macOS ] || [ "$TEST_TYPE" = tvOS ]; then
    gem install xcpretty -N --no-ri --no-rdoc
  elif [ "$TEST_TYPE" = CocoaPods ]; then
    gem install cocoapods --pre --quiet --no-ri --no-rdoc
  elif [ "$TEST_TYPE" = Carthage ]; then
    brew update
    brew install carthage || brew upgrade carthage
  fi
script:
- |
    case $TEST_TYPE in
    iOS)
      set -o pipefail
      xcodebuild test -project Bolts.xcodeproj -sdk iphonesimulator -scheme Bolts-iOS -configuration Debug -destination "platform=iOS Simulator,name=iPhone SE" GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
      ;;
    macOS)
      set -o pipefail
      xcodebuild test -project Bolts.xcodeproj -sdk macosx -scheme Bolts-macOS -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
      ;;
    tvOS)
      set -o pipefail
      xcodebuild test -project Bolts.xcodeproj -sdk appletvsimulator -scheme Bolts-tvOS -destination "platform=tvOS Simulator,name=Apple TV" -configuration Debug GCC_INSTRUMENT_PROGRAM_FLOW_ARCS=YES GCC_GENERATE_TEST_COVERAGE_FILES=YES | xcpretty -c
      ;;
    CocoaPods)
      pod lib lint --use-libraries Bolts.podspec
      pod lib lint Bolts.podspec
      ;;
    Carthage)
      carthage build --no-skip-current
      ;;
    *)
      ;;
    esac
after_success:
- |
    if [ "$TEST_TYPE" = iOS ] || [ "$TEST_TYPE" = OSX ] || [ "$TEST_TYPE" = tvOS ]; then
      bash <(curl -s https://codecov.io/bash)
    fi
